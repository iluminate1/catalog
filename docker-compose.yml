services:
  backend:
    build:
      dockerfile: ./Dockerfile
      context: ./backend/
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend/catalog/
          target: /app/catalog
          ignore:
            - ./backend/.venv/
        - action: rebuild
          path: ./backend/uv.lock

  db:
    image: postgres:17
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: "${DB_USER:?}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:?}"
      POSTGRES_DB: "${DB_NAME:?}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 3s
      retries: 3

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
